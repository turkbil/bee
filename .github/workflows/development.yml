name: 🧪 Development CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, redis
        coverage: none

    - name: 📦 Copy .env
      run: cp .env.example .env

    - name: 🔧 Configure environment for testing
      run: |
        sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=sqlite/' .env
        sed -i 's/DB_DATABASE=laravel/DB_DATABASE=:memory:/' .env
        echo "CACHE_DRIVER=redis" >> .env
        echo "SESSION_DRIVER=array" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env

    - name: 📦 Install PHP dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: 🔑 Generate application key
      run: php artisan key:generate

    - name: 🗃️ Run migrations
      run: php artisan migrate --env=testing --force

    - name: 🧪 Run PHPUnit tests
      run: php artisan test --coverage --min=70

    - name: 📊 Run static analysis
      run: |
        if [ -f "./vendor/bin/phpstan" ]; then
          ./vendor/bin/phpstan analyse --memory-limit=2G
        else
          echo "⚠️ PHPStan not installed, skipping static analysis"
        fi

  code-quality:
    name: 📋 Code Quality Check
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip

    - name: 📦 Install dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: 🎨 Run PHP CS Fixer (dry-run)
      run: |
        if [ -f "./vendor/bin/php-cs-fixer" ]; then
          ./vendor/bin/php-cs-fixer fix --dry-run --diff
        else
          echo "⚠️ PHP CS Fixer not installed, skipping code style check"
        fi

  security:
    name: 🔒 Security Check
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: 📦 Install dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: 🔐 Run security audit
      run: composer audit

  notify-success:
    name: 🎉 Notify Success
    runs-on: ubuntu-latest
    needs: [test, code-quality, security]
    if: ${{ success() }}

    steps:
    - name: ✅ Success notification
      run: |
        echo "🎉 All checks passed successfully!"
        echo "✅ Tests: PASSED"
        echo "✅ Code Quality: PASSED"
        echo "✅ Security: PASSED"

  notify-failure:
    name: ❌ Notify Failure
    runs-on: ubuntu-latest
    needs: [test, code-quality, security]
    if: ${{ failure() }}

    steps:
    - name: ❌ Failure notification
      run: |
        echo "❌ Some checks failed!"
        echo "Please check the logs and fix the issues."