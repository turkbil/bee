version: '3.8'

services:
  # Laravel Development Container
  laravel-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: laravel-dev-app
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      APP_ENV: local
      APP_DEBUG: true
      DB_HOST: mysql-dev
      REDIS_HOST: redis-dev
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: sync
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003 start_with_request=yes"
      PHP_IDE_CONFIG: "serverName=laravel-docker"
      VIRTUAL_HOST: laravel.test
      VIRTUAL_PORT: 80
    volumes:
      - .:/var/www/html:cached
      - /var/www/html/vendor
      - /var/www/html/node_modules
    ports:
      - "80:80"
    depends_on:
      mysql-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    networks:
      - laravel-dev-network
    command: >
      bash -c "
        php-fpm &
        nginx -g 'daemon off;'
      "

  # MySQL Development Database
  mysql-dev:
    image: mysql:8.0
    container_name: laravel-mysql-dev
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./docker/mysql/dev.cnf:/etc/mysql/conf.d/dev.cnf
    networks:
      - laravel-dev-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      timeout: 10s
      interval: 15s
      retries: 5

  # Redis Development Cache
  redis-dev:
    image: redis:7-alpine
    container_name: laravel-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - laravel-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      interval: 5s
      retries: 5

  # PhpMyAdmin Development
  phpmyadmin-dev:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel-phpmyadmin-dev
    restart: unless-stopped
    environment:
      PMA_HOST: mysql-dev
      PMA_USER: root
      PMA_PASSWORD: password
      UPLOAD_LIMIT: 100M
    ports:
      - "8080:80"
    depends_on:
      mysql-dev:
        condition: service_healthy
    networks:
      - laravel-dev-network

  # Redis Commander Development
  redis-commander-dev:
    image: rediscommander/redis-commander:latest
    container_name: laravel-redis-commander-dev
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis-dev:6379:0
      HTTP_USER: admin
      HTTP_PASSWORD: password
    ports:
      - "8081:8081"
    depends_on:
      redis-dev:
        condition: service_healthy
    networks:
      - laravel-dev-network

  # Laravel Horizon Development (Optional)
  horizon-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: laravel-horizon-dev
    restart: unless-stopped
    command: php artisan horizon
    environment:
      APP_ENV: local
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis-dev
      DB_HOST: mysql-dev
    volumes:
      - .:/var/www/html:cached
      - /var/www/html/vendor
    depends_on:
      mysql-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    networks:
      - laravel-dev-network
    profiles:
      - horizon

networks:
  laravel-dev-network:
    driver: bridge

volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local