{
  "permissions": {
    "allow": [
      "Bash(php artisan make:migration:*)",
      "Bash(php artisan:*)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_bCnyUf/**)",
      "Bash(say:*)",
      "Bash(curl -s http://laravel.test/api/ai/v1/product-placeholder/1)",
      "Bash(curl -s http://laravel.test/api/ai/v1/product-placeholder/296)",
      "Bash(python3:*)",
      "Bash(curl:*)",
      "Bash(timeout 60 curl -s \"http://laravel.test/api/ai/v1/product-placeholder/293\")",
      "Bash(docker ps:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\n✨ FEATURE: Shop Product Field Templates + AI Enhancements + System Fixes\n\nBu commit kapsamlı sistem güncellemeleri içeriyor:\n\n## 🎯 Ana Özellikler\n\n### 1. Shop Product Field Templates (Tenant-Specific)\n- ✅ Tenant bazlı dinamik ürün alanları şablon sistemi\n- ✅ 4 hazır şablon: Kitap, Elektronik, Giyim, Endüstriyel\n- ✅ Migration: tenant/2025_10_13_200704_create_shop_product_field_templates_table\n- ✅ Model: ShopProductFieldTemplate\n- ✅ Seeder: ShopProductFieldTemplateSeeder (tablo kontrolü ile)\n- ✅ Controller: ShopFieldTemplateController (CRUD)\n\n### 2. AI Conversation Analytics\n- ✅ ConversationAnalyticsController eklendi\n- ✅ Analytics dashboard view eklendi\n- ✅ Konuşma istatistikleri ve raporlama\n\n### 3. Product Chat Placeholder Service\n- ✅ ProductPlaceholderService eklendi\n- ✅ Dinamik ürün chat placeholder sistemi\n- ✅ Migration: 2025_10_13_192634_create_product_chat_placeholders_table\n\n### 4. Shop Custom JSON Fields\n- ✅ Migration: 2025_10_13_181509_add_custom_json_fields_to_shop_products_table\n- ✅ JSON veri migrasyonu: 2025_10_13_194933_migrate_shop_products_json_to_custom_fields\n- ✅ custom_technical_specs, custom_features, custom_certifications alanları\n\n## 🔧 Düzeltmeler\n\n### TenantDatabaseSeeder\n- 🐛 Menü duplicate hatası düzeltildi\n- ✅ Mevcut menü kontrolü eklendi (updateOrCreate yerine check)\n\n### Seeder Sistemi\n- 🔧 200+ shop product seeder dosyası güncellendi\n- 🔧 ShopProductFieldTemplateSeeder tablo kontrolü eklendi\n- ✅ Central seeding sırasında otomatik atlanma\n\n## 🎨 UI/UX İyileştirmeleri\n\n### AI Chat Widgets\n- 🎨 Floating widget iyileştirildi\n- 🎨 Inline widget güncellendi\n- 🎨 Chat store component optimize edildi\n\n### Shop Admin\n- ✅ Field template yönetim sayfaları eklendi\n- ✅ JSON manager partial view eklendi\n- 🎨 Product manage component güncellemeler\n\n## 📚 Dökümanlar\n\n- 📝 TELEGRAM-BOT-SETUP.md eklendi\n- 📝 Field templates dökümanları eklendi\n- 📝 Claude güncel dökümanları\n\n## 🧪 Test Durumu\n\n- ✅ Migration + Seeding başarılı (hatasız)\n- ✅ Laravel.log temiz\n- ✅ 4 tenant''ta başarıyla çalışıyor\n- ✅ Field template seeder her tenant''ta 4 şablon oluşturdu\n\n## 📦 Bağımlılıklar\n\n- 📦 composer.lock güncellendi\n- 📦 Autoload dosyaları yenilendi\n\n---\n\n**Test Komutu:**\n```bash\nphp artisan app:clear-all && \\\nphp artisan migrate:fresh --seed && \\\nphp artisan tenants:migrate --seed\n```\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Read(//Users/nurullah/Desktop/cms/litef/**)",
      "Bash(php /Users/nurullah/Desktop/cms/laravel/artisan make:command ImportLitefSparePartsCommand)",
      "Bash(mysql:*)",
      "Bash(tee:*)",
      "Bash(column:*)",
      "Bash(php:*)",
      "Read(//private/etc/**)",
      "Bash(valet links:*)",
      "Bash(valet link:*)",
      "Bash(valet paths:*)",
      "Bash(sudo -S valet link:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(done)",
      "Bash(sudo -S valet secure:*)",
      "Bash(sudo -S valet restart:*)",
      "Bash(sudo -S valet links:*)",
      "Bash(find:*)",
      "Bash(do echo \"=== $tenant ===\" find /Users/nurullah/Desktop/cms/laravel/storage/$tenant -type d)",
      "Bash(tree:*)",
      "Bash(xargs:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\n💾 BACKUP: Tüm Sistem + Storage Görselleri + Litef Spare Parts\n\n## 📦 Commit İçeriği\n\n### 🗂️ Storage Dosyaları\n- ✅ storage/app/public/tenant2/ - Tüm tenant görselleri\n- ✅ storage/app/public/litef-spare-parts/ - 699 ürün görseli\n- ✅ storage/app/public/litef-body-images/ - 9 body görseli\n- ✅ Diğer tüm storage klasörleri\n\n### 🆕 Yeni Dosyalar\n- ✅ app/Console/Commands/GenerateLitefSeedersCommand.php\n- ✅ app/Console/Commands/ImportLitefSparePartsCommand.php\n- ✅ app/Services/Media/TenantImageService.php\n- ✅ app/Services/Media/TenantPathGenerator.php\n- ✅ Modules/Shop/database/seeders/LitefSpareParts/ (tüm seeder dosyaları)\n\n### 📝 Güncellemeler\n- 🔧 .gitignore güncellendi (storage dahil edildi)\n- 🔧 .claude/settings.local.json\n- 🔧 AI/ChatWidgetService.php\n- 🔧 Models: Announcement, Blog, BlogCategory, Page, Portfolio, PortfolioCategory\n- 🔧 Shop Models: ShopBrand, ShopCategory, ShopProduct, ShopProductVariant\n- 🔧 SeoManagement komponenti ve view\n- 🔧 SettingManagement helpers ve components\n- 🔧 Tenancy ve Storage yapılandırmaları\n- 🔧 Database ve Media Library config\n\n### 📚 Dökümanlar\n- 📝 readme/claude-docs/claudeguncel-2025-10-13-22-30-litef-import.md\n- 📝 readme/claude-docs/litef-spare-parts-backup-instructions.md\n\n## 📊 İstatistikler\n- 📁 120 dosya eklendi/güncellendi\n- 🖼️ ~700 ürün görseli dahil\n- 💾 Tam sistem yedekleme\n\n---\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(systemctl restart:*)",
      "Bash(plesk bin service:*)",
      "Bash(redis-cli:*)",
      "Read(//var/www/vhosts/tuufi.com/logs/**)",
      "Bash(systemctl status:*)",
      "Read(//etc/php-fpm.d/**)",
      "Bash(plesk bin php_handler:*)",
      "Bash(git commit:*)",
      "Bash(git clean:*)",
      "Bash(git pull:*)",
      "Bash(chmod:*)",
      "Bash(./deploy_production.sh:*)",
      "Bash(timeout 60 ssh:*)",
      "Bash(ssh:*)",
      "Read(//tmp/**)",
      "Bash(/dev/null)",
      "Bash(brew services restart:*)",
      "Bash(cat:*)",
      "Bash(timeout 60 curl:*)",
      "Bash(nginx -v)",
      "Bash(apache2 -v)",
      "Bash(httpd -v)",
      "Read(//opt/homebrew/etc/nginx/**)",
      "Bash(awk:*)",
      "Bash(do echo \"=== design-menu-$i.html ===\")",
      "Bash(do echo \"=== Menu $i ===\")",
      "Bash(./fix-alpine-variables.sh)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_ldBDv5/**)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_djQ4MY/**)",
      "Bash(npm run build:*)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_YBuSCT/**)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_KYBR69/**)",
      "Read(//Users/nurullah/Desktop/**)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_MdkdLK/**)",
      "WebSearch",
      "Bash(git checkout:*)",
      "Bash(composer require:*)",
      "Bash(git remote set-url:*)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_LIWRHx/**)",
      "Bash(pdftotext:*)",
      "Bash(md5:*)",
      "Bash(node --version:*)",
      "Bash(npm:*)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_CGCygW/**)",
      "Bash(if [ -f \"$f\" ])",
      "Bash(then)",
      "Bash(fi)",
      "Bash(composer dump-autoload:*)",
      "Bash(timeout 30 curl:*)",
      "Bash(open:*)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_0Q6dmo/**)",
      "Bash(git restore:*)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_RqKpzp/**)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_3gYWHB/**)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_xhufez/**)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_VKscfx/**)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_UP1Bsz/**)",
      "Bash(npx mix:*)",
      "Read(//Users/nurullah/.claude/**)",
      "Bash(test:*)",
      "WebFetch(domain:github.com)",
      "Bash(git clone:*)",
      "Read(//var/folders/6g/wmhsfvr90pgf031lysz0c03w0000gn/T/TemporaryItems/NSIRD_screencaptureui_GK8dow/**)",
      "Bash(if [ -f ~/.claude/skills/$skill/SKILL.md ])",
      "Bash(head:*)",
      "Bash(else)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits"
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "claude-code-server"
  ]
}
